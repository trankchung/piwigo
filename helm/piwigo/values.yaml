# Global Docker image parameters
# Please, note that this will override the image parameters, including dependencies, configured to use the global value
# Current available global Docker image parameters: imageRegistry
#
# global:
#   imageRegistry: myRegistryName

# String to partially override fullname template (will maintain the release name)
#
# nameOverride:

# String to fully override fullname template
#
# fullnameOverride:

# ref: https://hub.docker.com/r/mathieuruellan/piwigo
#
image:
  registry: docker.io
  repository: mathieuruellan/piwigo
  tag: release-2.9.4
  # Specify a imagePullPolicy
  # Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  # ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  #
  pullPolicy: IfNotPresent

replicas: 1

# Kubernetes configuration
# For minikube, set this to NodePort, elsewhere use LoadBalancer
#
service:
  # ClusterIP, LoadBalancer, or NodePort
  type: ClusterIP
  # HTTP Port
  port: 80
  # loadBalancerIP:
  #
  # nodePort: <to set explicitly, choose port between 30000-32767>
  nodePort: ""
  #
  # Enable client source IP preservation
  # ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  #
  externalTrafficPolicy: Cluster
  # Service annotations done as key:value pairs
  annotations: {}

# Enable persistence using Persistent Volume Claims
# ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
#
persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 10Gi
  # storageClass: ""

# Configure the ingress resource that allows you to access the
# ref: http://kubernetes.io/docs/user-guide/ingress/
#
ingress:
  # Set to true to enable ingress record generation
  enabled: false

  # Ingress annotations done as key:value pairs
  # For a full list of possible ingress annotations, please see
  # ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  #
  # If tls is set to true, annotation ingress.kubernetes.io/secure-backends: "true" will automatically be set
  # If certManager is set to true, annotation kubernetes.io/tls-acme: "true" will automatically be set
  annotations: {}
  #  kubernetes.io/ingress.class: nginx

  # The list of hostnames to be covered with this ingress record.
  # Most likely this will be just one host, but in the event more hosts are needed, this is an array
  hosts:
  - name: piwigo.local
    path: /

    # Set this to true in order to enable TLS on the ingress record
    tls: true

    # Optionally specify the TLS hosts for the ingress record
    # Useful when the Ingress controller supports www-redirection
    # If not specified, the above host name will be used
    # tlsHosts:
    # - www.piwigo.local
    # - piwigo.local

    # If TLS is set to true, you must declare what secret will store the key/certificate for TLS
    tlsSecret: piwigo-tls-cert

# Extra environtment variables to append to deployment
extraEnvVars: {}

# Pod Upgrade Strategy
# ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
#
strategy: {}

# Pod Security Context
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
#
securityContext: {}

# Configure resource requests and limits
# ref: http://kubernetes.io/docs/user-guide/compute-resources/
#
resources: {}

# Node selector for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
#
nodeSelector: {}

# Affinity for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
#
affinity: {}

